import cv2
import numpy as np
import matplotlib.pyplot as plt
def plotHistogram(image,x,y):
    gray_image = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
    hist = cv2.calcHist([gray_image], [0], None, [256], [y, x])
    plt.figure(figsize=(8, 6))
    plt.title('Histogram')
    plt.xlabel('Pixel Intensity')
    plt.ylabel('Frequency')
    plt.bar(np.arange(256), hist.ravel(), color='blue')
    plt.show()
image_path = 'C:/Users/Student/Downloads/img.jpg'
image_path2 = 'C:/Users/Student/Downloads/img2.jpg'
image = cv2.imread(image_path)
image2 = cv2.imread(image_path2)
plotHistogram(image,256,0)
plotHistogram(image2,500,50)


// Histogram equalization
import cv2
import numpy as np
import matplotlib.pyplot as plt

# Load the image
image = cv2.imread('C:/Users/Student/Downloads/img.jpg')

# Convert the image to grayscale
gray_image = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)

# Perform histogram equalization
equalized_image = cv2.equalizeHist(gray_image)

# Display original and equalized images
plt.figure(figsize=(10, 5))
plt.subplot(1, 2, 1)
plt.imshow(cv2.cvtColor(gray_image, cv2.COLOR_GRAY2RGB))
plt.title('Original Image')
plt.axis('off')

plt.subplot(1, 2, 2)
plt.imshow(cv2.cvtColor(equalized_image, cv2.COLOR_GRAY2RGB))
plt.title('Equalized Image')
plt.axis('off')

plt.show()
